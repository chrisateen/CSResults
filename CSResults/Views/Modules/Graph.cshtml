@model CSResults.Models.ResultsGraphViewModel
@{
    ViewBag.Title = "Graph";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    //Data for chart
    var yrs = new List<String>();
    var mean = new List<Double?>();
    var module_name = Model.resultViewModel.First().module.moduleName.ToString();


    foreach (var item in Model.resultViewModel)
    {
        yrs.Add(item.result.year);
        mean.Add(item.result.mean);
    }
}

<h2>Graph</h2>


<div class="form-group row">

    @using (Html.BeginForm("Test", "Modules", FormMethod.Post, new { @class = "form-inline ml-2 col-11 justify-content-center" }))
    {
        <label for="module" class="pr-2 pl-2">
            @Html.DisplayNameFor(model => model.moduleID)
        </label>

        @Html.DropDownListFor(model => model.moduleID,
             new SelectList(Model.modules, "moduleID", "moduleName"), new { @class = "form-control mr-2 col-lg-6 col-md-5 col-sm-4" })


        <button type="submit" class="btn btn-success">
            <i class="fa fa-search"></i>
        </button>


    }

</div>

<canvas id="lineChart"></canvas>


<script>

    var ctx = document.getElementById('lineChart').getContext('2d');
    var chart = new Chart(ctx, {
    // The type of chart we want to create
    type: 'line',

    // The data for our dataset
    data: {
        labels: @Html.Raw(Json.Encode(yrs)),
        datasets: [{
            label: @Html.Raw(Json.Encode(module_name)),
            backgroundColor: 'rgb(255, 99, 132)',
            borderColor: 'rgb(255, 99, 132)',
            data: @Html.Raw(Json.Encode(mean))
        }]
    },

    // Configuration options go here
    options: {}
});

</script>
