@model IEnumerable<CSResults.Models.ResultsViewModel>

@{
    ViewBag.Title = "Results Table";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@Styles.Render("~/bundles/bootstrapTable")


<script src="https://unpkg.com/bootstrap-table@1.15.5/dist/bootstrap-table.min.js"></script>
<script src="https://unpkg.com/tableexport.jquery.plugin/tableExport.min.js"></script>
<script src="https://unpkg.com/bootstrap-table@1.15.5/dist/extensions/fixed-columns/bootstrap-table-fixed-columns.js"></script>
<script src="https://unpkg.com/bootstrap-table@1.15.5/dist/extensions/export/bootstrap-table-export.min.js"></script>

<h2>Results for all Modules</h2>

<br>

<table 
       id="resultsTable"
       data-toggle="table"
       data-search="true"
       data-show-columns="true"
       data-sortable="true"
       data-pagination="true"
       data-fixed-columns="true"
       data-fixed-number=2
       data-show-export="true"
       data-export-data-type="all">
    <thead>
        <tr id="title">

            <th data-sortable="true">
                @Html.DisplayNameFor(model => model.module.moduleName)
            </th>
            <th data-sortable="true">
                @Html.DisplayNameFor(model => model.result.year)
            </th>
            <th data-sortable="true">
                @Html.DisplayNameFor(model => model.result.mean)
            </th>
            <th data-sortable="true">
                @Html.DisplayNameFor(model => model.result.median)
            </th>
            <th data-sortable="true">
                @Html.DisplayNameFor(model => model.result.below30)
            </th>
            <th data-sortable="true">
                @Html.DisplayNameFor(model => model.result.below40)
            </th>
            <th data-sortable="true">
                @Html.DisplayNameFor(model => model.result.below50)
            </th>
            <th data-sortable="true">
                @Html.DisplayNameFor(model => model.result.below60)
            </th>
            <th data-sortable="true">
                @Html.DisplayNameFor(model => model.result.below70)
            </th>
            <th data-sortable="true">
                @Html.DisplayNameFor(model => model.result.below80)
            </th>
            <th data-sortable="true">
                @Html.DisplayNameFor(model => model.result.above80)
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr id="body">
                <td>
                    @Html.DisplayFor(modelItem => item.module.moduleName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.result.year)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.result.mean)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.result.median)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.result.below30)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.result.below40)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.result.below50)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.result.below60)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.result.below70)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.result.below80)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.result.above80)
                </td>
            </tr>


        }
    </tbody>
</table>